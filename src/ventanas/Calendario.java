/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import clases.Fecha;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.WindowConstants;

/**
 *
 * @author FELIX
 */
public class Calendario extends javax.swing.JFrame {

    private HashMap<String, JButton> botones = new HashMap<>();
    private JTextField obj;
    private String fechaInSt;
    private Fecha fechaInDt;
    private String fechaOutSt;
    private Fecha fechaOutDt;

    //Fecha fechaOutSt;
    /**
     * Creates new form Calendario
     *
     * @throws java.text.ParseException
     */
    public Calendario() throws ParseException {
        initComponents();
        initBotones();

        setSize(430, 400);
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setBackground(Color.white);

        //Poniendo meses al cmb_mes
        String meses[] = new String[12];
        for (int i = 0; i < 12; i++) {
            meses[i] = new Fecha(1, i + 1, 2020).getMesSt();
        }
        cmb_mes.setModel(new javax.swing.DefaultComboBoxModel<>(meses));
        cmb_mes.setSelectedItem(new Fecha(new Date()).getMesSt());

        //Poniendo años al cmb_annio
        String annios[] = new String[41];
        for (int i = 0; i < 41; i++) {
            annios[i] = (new Fecha(new Date()).getAnnio() - 20 + i) + "";
        }
        cmb_annio.setModel(new javax.swing.DefaultComboBoxModel<>(annios));
        cmb_annio.setSelectedIndex(20);
        lbl_mes_annio.setText(cmb_mes.getSelectedItem() + " - " + cmb_annio.getSelectedItem());
        MostrarFechas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_prueba = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmb_mes = new javax.swing.JComboBox<>();
        cmb_annio = new javax.swing.JComboBox<>();
        btn_anterior = new javax.swing.JButton();
        btn_siguiente = new javax.swing.JButton();
        lbl_mes_annio = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calendario");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_prueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pruebaActionPerformed(evt);
            }
        });
        getContentPane().add(btn_prueba, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 20, 20));

        jLabel1.setText("Mes:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, 20));

        jLabel2.setText("Año:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, -1, 20));

        cmb_mes.setMaximumRowCount(12);
        cmb_mes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_mesItemStateChanged(evt);
            }
        });
        cmb_mes.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_mesPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cmb_mes.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmb_mesPropertyChange(evt);
            }
        });
        getContentPane().add(cmb_mes, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 100, -1));

        cmb_annio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_annioItemStateChanged(evt);
            }
        });
        cmb_annio.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_annioPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cmb_annio, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 100, -1));

        btn_anterior.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        btn_anterior.setText("-");
        btn_anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_anteriorActionPerformed(evt);
            }
        });
        getContentPane().add(btn_anterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 50, 50));

        btn_siguiente.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        btn_siguiente.setText("+");
        btn_siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_siguienteActionPerformed(evt);
            }
        });
        getContentPane().add(btn_siguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 50, 50));

        lbl_mes_annio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_mes_annio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_mes_annio.setText("Mes - Año");
        getContentPane().add(lbl_mes_annio, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 320, 50));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Dom");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 60, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Lun");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Mar");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 60, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Mie");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 60, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Jue");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 60, 20));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Vie");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 60, 20));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Sab");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 60, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 420, 270));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_pruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pruebaActionPerformed

    }//GEN-LAST:event_btn_pruebaActionPerformed

    private void cmb_mesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmb_mesPropertyChange

    }//GEN-LAST:event_cmb_mesPropertyChange

    private void cmb_mesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_mesItemStateChanged
        try {
            if (!cmb_mes.getSelectedItem().equals("") && !cmb_annio.getSelectedItem().equals("")) {
                try {
                    MostrarFechas();
                } catch (ParseException ex) {
                    Logger.getLogger(Calendario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            lbl_mes_annio.setText(cmb_mes.getSelectedItem() + " - " + cmb_annio.getSelectedItem());
        } catch (NullPointerException e) {
        }

    }//GEN-LAST:event_cmb_mesItemStateChanged

    private void cmb_annioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_annioItemStateChanged
        try {
            if (!cmb_mes.getSelectedItem().equals("") && !cmb_annio.getSelectedItem().equals("")) {
                try {
                    MostrarFechas();
                } catch (ParseException ex) {
                    Logger.getLogger(Calendario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            lbl_mes_annio.setText(cmb_mes.getSelectedItem() + " - " + cmb_annio.getSelectedItem());
        } catch (NullPointerException e) {
        }

    }//GEN-LAST:event_cmb_annioItemStateChanged

    private void cmb_mesPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_mesPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_cmb_mesPopupMenuWillBecomeInvisible

    private void cmb_annioPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_annioPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_cmb_annioPopupMenuWillBecomeInvisible

    private void btn_anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_anteriorActionPerformed

        if (cmb_mes.getSelectedIndex() == 0) {
            if (cmb_annio.getSelectedIndex() == 0) {
            } else {
                cmb_mes.setSelectedIndex(11);
                cmb_annio.setSelectedIndex(cmb_annio.getSelectedIndex() - 1);
            }
        } else {
            cmb_mes.setSelectedIndex(cmb_mes.getSelectedIndex() - 1);
        }

    }//GEN-LAST:event_btn_anteriorActionPerformed

    private void btn_siguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_siguienteActionPerformed

        if (cmb_mes.getSelectedIndex() == 11) {
            if (cmb_annio.getSelectedIndex() == 40) {
            } else {
                cmb_mes.setSelectedIndex(0);
                cmb_annio.setSelectedIndex(cmb_annio.getSelectedIndex() + 1);
            }
        } else {
            cmb_mes.setSelectedIndex(cmb_mes.getSelectedIndex() + 1);
        }

    }//GEN-LAST:event_btn_siguienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calendario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calendario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calendario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calendario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Calendario().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(Calendario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_anterior;
    private javax.swing.JButton btn_prueba;
    private javax.swing.JButton btn_siguiente;
    private javax.swing.JComboBox<String> cmb_annio;
    private javax.swing.JComboBox<String> cmb_mes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_mes_annio;
    // End of variables declaration//GEN-END:variables

    private void MostrarFechas() throws ParseException {
        Fecha fecha1, fecha2;
        String mes = cmb_mes.getSelectedItem().toString();
        int annio = Integer.parseInt(cmb_annio.getSelectedItem().toString());
        fecha1 = new Fecha(1, mes, annio);
        fecha2 = new Fecha(1, fecha1.getMes() + 1, fecha1.getAnnio());
        fecha2 = fecha2.sumarDias(fecha2, -1);

        JButton boton;

        //Remueve todo texto de los botones
        for (int i = 1; i <= 42; i++) {
            boton = botones.get("btn" + i);
            boton.setText("");
        }

        //Ubica el primer dia del mes
        for (int i = 1; i <= 7; i++) {
            boton = botones.get("btn" + i);
            if (fecha1.getDiaSemana() == i) {
                boton.setText("1");
            }
        }

        JButton boton1, boton2;
        //Muestra todas las fechas
        for (int i = 1; i <= 41; i++) {
            boton1 = botones.get("btn" + i);
            boton2 = botones.get("btn" + (i + 1));
            if (!boton1.getText().isEmpty()) {
                int numBoton1 = Integer.parseInt(boton1.getText());
                if (numBoton1 < fecha2.getDia()) {
                    boton2.setText((numBoton1 + 1) + "");
                }
            }
        }

        HabilitarBotones();
    }

    private void HabilitarBotones() {
        JButton boton;
        for (int i = 1; i <= 42; i++) {
            boton = botones.get("btn" + i);
            if (boton.getText().isEmpty()) {
                boton.setEnabled(false);
            } else {
                boton.setEnabled(true);
            }
        }
    }

    private void initBotones() {
        for (int j = 0; j < 6; j++) {
            for (int i = 0; i < 7; i++) {
                String nombreBoton = "btn" + (i + j * 7 + 1);
                JButton boton = new JButton();
                boton.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent ae) {
                        if (boton.getText().isEmpty()) {
                            //No hace nada
                        } else {
                            try {
                                fechaOutDt = new Fecha(Integer.parseInt(boton.getText()), cmb_mes.getSelectedItem().toString(), Integer.parseInt(cmb_annio.getSelectedItem().toString()));
                            } catch (ParseException ex) {
                                Logger.getLogger(Calendario.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            fechaOutSt = fechaOutDt.getFechaSt();
                            obj.setText(fechaOutSt);
                            setVisible(false);
                        }
                    }
                });
                jPanel1.add(boton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60 * i, 20 + 40 * j, 60, 40));
                botones.put(nombreBoton, boton);
            }
        }
    }

    public void seleccionarFecha(JTextField objetivo) throws ParseException {
        obj = objetivo;
        fechaInSt = obj.getText();
        if (fechaInSt.isEmpty()) {
            //Nada
        } else {
            fechaInDt = new Fecha(fechaInSt);
            ResaltarBoton();
        }
        this.setVisible(true);
    }

    private void ResaltarBoton() {
        JButton boton;
        //Remueve todo texto de los botones
        for (int i = 1; i <= 42; i++) {
            boton = botones.get("btn" + i);
            if (!boton.getText().isEmpty()) {
                if (Integer.parseInt(boton.getText()) == fechaInDt.getDia()) {
                    boton.setBackground(Color.white);
                }
            }
        }
    }
}
